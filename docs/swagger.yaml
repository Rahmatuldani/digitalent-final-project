basePath: /api/v1
definitions:
  request.UserLogin:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  request.UserRegReq:
    properties:
      age:
        minimum: 8
        type: integer
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - age
    - email
    - password
    - username
    type: object
  request.UserUpdateReq:
    properties:
      email:
        type: string
      username:
        type: string
    required:
    - email
    - username
    type: object
  response.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  response.TokenJWT:
    properties:
      token:
        type: string
    type: object
  response.UserRegRes:
    properties:
      age:
        type: integer
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  response.WebResponse:
    properties:
      message: {}
    type: object
host: localhost:5000
info:
  contact: {}
  description: Server API for MyGram app
  title: MyGram API
  version: "1.0"
paths:
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: User delete
      parameters:
      - description: Bearer Token
        in: header
        name: Bearer
        required: true
        type: string
      - description: Id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.WebResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: User delete
      tags:
      - users
    put:
      consumes:
      - application/json
      description: User update
      parameters:
      - description: Bearer Token
        in: header
        name: Bearer
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: Request Body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UserUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.WebResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: User update
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: User login
      parameters:
      - description: Request Body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.TokenJWT'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: User login
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: User register
      parameters:
      - description: Request Body
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/request.UserRegReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.UserRegRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: User register
      tags:
      - users
swagger: "2.0"
